[{"meta":{"draft":false,"tags":["Путешествие"],"title":"Путешествие: Бузулукский Бор",
  "description":"Путь от Самары до Самары через основные точки - <a href= https://yandex.ru/maps/?ll=52.156889%2C53.017997&amp;mode=routes&amp;rtext=53.195878%2C50.100202~52.929576%2C51.893031~52.989039%2C52.125711~52.983122%2C52.100308~53.027135%2C52.144126~53.027502%2C52.132935~53.044115%2C52.172082~53.100580%2C52.199199~53.195878%2C50.100202&amp;rtt=auto&amp;ruri=ymapsbm1%3A%2F%2Fgeo%3Fdata%3DCgg1MzEwNTMxNhIa0KDQvtGB0YHQuNGPLCDQodCw0LzQsNGA0LAiCg2bZkhCFZTIVEI%2C~~~ymapsbm1%3A%2F%2Forg%3Foid%3D174720680678~~~~~ymapsbm1%3A%2F%2Fgeo%3Fdata%3DCgg1MzEwNTMxNhIa0KDQvtGB0YHQuNGPLCDQodCw0LzQsNGA0LAiCg2bZkhCFZTIVEI%2C&amp;source=constructorLink&amp;um=constructor%3A3e2a2ab866937645b2142f9545fec472e8d68c371297d95e6d659d03c8ae08fc&amp;z=13.51 >https://yandex.ru/maps</a> - возле Паникинского Яра можно пешеходом дойти до Царь Бор, т.к. автомобильный мост сломан, а пешеходный есть. Причем только на яндекс картах это было указано, на других картах мост еще существует почему-то. Если же время есть то можно развернуться и сделав крюк доехать до Царь Бора и поехать потом дальше на озера, но повторюсь светового дня не хватило. Возле перекатов также есть еще хаски-парк, а с другой стороны эко-тропа по лесу, которая видимо идет через весь лес. Еще один вариант остановиться в гостинице в Панике, если хочется удлинить путешествие с одного до двух дней. Также отмечу что заезжали мы через деревню Колтубанка по добротному понтонному мосту, по которому многие ездят, чтобы не делать крюк через Бузулук.","firstImageSrc":"pages/2024/ПутешествиеБузулукскийБор/image.png","date":"04 ноября 2024 "},"link":"pages/2024/ПутешествиеБузулукскийБор/index.html","pageSearchData":"    # Путешествие: Бузулукский Бор    ```blogEnginePageDate  04 ноября 2024  ```    Информацию о Бузулукском Бору можно найти на официальном сайте - [https://npbuzbor.ru/](https://npbuzbor.ru/). Там же  можно купить билеты, всего 200р со взрослого человека. Бузулукский бор - это набор нескольких интересных мест. Наиболее  известные - это эко-тропа до царицы сосны **Царь-Бор**, где можно посмотреть почти самую высокую сосну в мире (2-ое  место), дети могут побегать по парку, покататься на качелях. Далее я бы отметил место - **Перекаты** - тут можно  посидеть на пляже и отдохнуть (мы ездили в начале осени). И место - **Паникинский Яр**, где можно постоять на парапете  над пропастью в реку. К сожалению нам не хватило осеннего светового дня чтобы доехать до конца бора, поэтому придется  ехать еще разок&nbsp;)). Оставляю ниже мой маршрут и места, которые я отобрал для просмотра, т.к. на каждом озере  останавливаться - не хватит времени.    Путь от Самары до Самары через основные  точки - [https://yandex.ru/maps](https://yandex.ru/maps/?ll=52.156889%2C53.017997&mode=routes&rtext=53.195878%2C50.100202~52.929576%2C51.893031~52.989039%2C52.125711~52.983122%2C52.100308~53.027135%2C52.144126~53.027502%2C52.132935~53.044115%2C52.172082~53.100580%2C52.199199~53.195878%2C50.100202&rtt=auto&ruri=ymapsbm1%3A%2F%2Fgeo%3Fdata%3DCgg1MzEwNTMxNhIa0KDQvtGB0YHQuNGPLCDQodCw0LzQsNGA0LAiCg2bZkhCFZTIVEI%2C~~~ymapsbm1%3A%2F%2Forg%3Foid%3D174720680678~~~~~ymapsbm1%3A%2F%2Fgeo%3Fdata%3DCgg1MzEwNTMxNhIa0KDQvtGB0YHQuNGPLCDQodCw0LzQsNGA0LAiCg2bZkhCFZTIVEI%2C&source=constructorLink&um=constructor%3A3e2a2ab866937645b2142f9545fec472e8d68c371297d95e6d659d03c8ae08fc&z=13.51) -  возле Паникинского Яра можно пешеходом дойти до Царь Бор, т.к. автомобильный мост сломан, а пешеходный есть. Причем  только на яндекс картах это было указано, на других картах мост еще существует почему-то. Если же время есть то можно  развернуться и сделав крюк доехать до Царь Бора и поехать потом дальше на озера, но повторюсь светового дня не хватило.  Возле перекатов также есть еще хаски-парк, а с другой стороны эко-тропа по лесу, которая видимо идет через весь лес. Еще  один вариант остановиться в гостинице в Панике, если хочется удлинить путешествие с одного до двух дней. Также отмечу  что заезжали мы через деревню Колтубанка по добротному понтонному мосту, по которому многие ездят, чтобы не делать крюк  через Бузулук.    ![](image.png)    Также прикладываю оффлайн точки  интереса - [оффлайн точки](https://drive.google.com/file/d/1178NoJYlpJp9y0MG_WBPMvqrH03dh-dI/view?usp=drive_link%C2%A0)."},{"meta":{"draft":false,"tags":["Путешествие"],"title":"WebSocket Security","description":"В случает REST запросов для авторизации нужно отправить токен авторизации в хедере или в куки.","firstImageSrc":"pages/2024/WebSocketSecurity/image.png"},"link":"pages/2024/WebSocketSecurity/index.html","pageSearchData":"    # WebSocket Security    > 22 апреля 2024    В случает REST запросов для авторизации нужно отправить токен авторизации в хедере или в куки.    Но в случае вебсокетов возникают проблемы. Во первых веб сокеты с именно браузера (бек-2-бек позволяет добавлять хедеры)  не разрешают добавлять кастомные хедеры (можно только указать версию протокола и в нее хаком воткнуть токен). Во вторых  вебсокет держит соединение, т.е. если у вас протухнет токен, то соединение все равно останется.    Я искал в интернете разные решение и в целом пришел к схеме, которую расскажу ниже. Список источников я уже забыл, но  помню что был один из документации по вебсокетам в Spring (Java), а другой вебсокеты в Heroku, которые также подводили  меня к этой схеме.    ![](image.png)    **Первый вопрос - проверка токена при запросе**. Сразу в момент соединения нужно понять стоит ли открывать коннекшен,  для этого подходит токен в куках, т.к. первичное соединение идет через HTTP, потом браузер и сервер автоматически  переводят соединение в WS, которое уже работает поверх TCP.    Если куками пользоваться нельзя, то можно пойти по пути дополнительного запроса в сервис, которые генерирует  короткоживущий рандомный ИДшник, и уже его передавать в квери параметрах и валидировать его. Можно и сам токен отправть  в квери параметрах, но это считается менее секьюрным. Чтобы валидировать ИДшник его с таймстемпом нужно положить в базу,  либо распрделенный кеш для микросервисов.    **Второй вопрос - как прервать соединение если токен протух**. Для этого предлагаю при каждом входящем соединение  присылать токен снова (если он не в куках). Если токен в куках, то добраться к немы видимо не получиться, т.к. обычно  они с ключем http-only и js их не увидит, только браузер и сервер. Тут наверно могу предложить решение открывать  соединени например на 5 минут и потом сервер должен его разорвать, чтобы клиент пришел с новой кукой.    Чтобы прислать токен можно сделать собственный формат сообщения, либо воспользоваться протоколом STOMP. По сути он  просто регламертирует в каком формате отправлять текст и соотвественно у него всегда есть текстовый блок HEADERS, хотя  конечно [STOMP](https://stomp.github.io/stomp-specification-1.2.html) заточен под MQ подход в большей степени. Далее  токен нужно валидировать. Но полноценная интроспекция токена возможно окажет дополнительное аффект на IDP (Identity  Provider service). Поэтому можно как вариант экономить и отправлять только через каждые 5 минут. Тут есть ассампшен что  пользователь сможет получать сообщения еще 5 минут после протухания токена, но возможно это не критично если WS  использвется для информирования. Если же через WS в вашем решении можно влиять на состояние сервисов, то наверно стоит  проверять каждый раз. Исключение составляют технические сообщения типа ping-pong, heart-bit, которыми пользуется  протокол WS для понимания не пропал ли сервер\\клиент.    Также обращаю внимание что в случает если по WS соединение удалось понять что токен протух то нужно сообщить клиенту об  это и разорвать соединение. Аналоги 401 в REST запросах. А дальше клиент решит что делать, например взять и обновиться.    **Третий вопрос - стоит ли валидировать токен при исходящем от сервер сообщении**. Из второго вопроса вытекает третий.  Если мы валидируем токен на входящее сообщение, то почему бы не валидировать токен на исходящем от сервера. Тут уже в  целом согласен с рекомендацией спринг документации. Во первых сообщений может быть много от сервера к каждому клиенту и  это даст дополнительную нагрузку, во вторых обычно клиент может подделать токен, а серверу мы доверяем и не зачем тогда  его валидировать. В третьих возмножо у сервер и нет токена, например сообщение из кафки пришло от внешней  инфраструктуры, у которой токена юзера нет. А хранить токен юзера в WebSocketService тоже нельзя, т.к. это нарушает  серьезно секюрити, потому что наврят ли тот кто будет писать WebSocketService сможет реализовать тот же уровень защиты  что и IDP, да и токены по идее должны зраниться только в одном месте - в IDP. Хотя если у вас монолит что вероятно IDP  это тот же WebSocketService и тогда вы можете это сделать, если данные во WS каналу действително стоит секьюрить  настолько.    Исходный код прототипа можно найти  тут - [https://github.com/stswoon/ws-security-example](https://github.com/stswoon/ws-security-example)"},{"meta":{"title":"Собственный Heroku","description":"Эх раньше был бесплатный <a href= https://www.heroku.com/ >Heroku</a>, потом его бесплатныеаналоги <a href= https://habr.com/ru/articles/702206/ >Render и Railway</a>, потом другие. Но вот почти все они закрыли бесплатные аккаунты. Где-то кусаются цены, а где-то не возможно оплатить с русской карты. Где-то есть технические ограничения на CPU, память или даже <a href= https://render.com/docs/disks > эфемерное  дисковое пространство</a>, что не дает работать с файлами на диске.","firstImageSrc":"pages/2023/СобственныйHeroku/image1.png"},"link":"pages/2023/СобственныйHeroku/index.html","pageSearchData":"# Собственный Heroku    > 01 август 2023    ### Проблема    Эх раньше был бесплатный [Heroku](https://www.heroku.com/), потом его  бесплатныеаналоги [Render и Railway](https://habr.com/ru/articles/702206/), потом другие. Но вот почти все они  закрыли бесплатные аккаунты. Где-то кусаются цены, а где-то не возможно оплатить с русской карты. Где-то есть  технические ограничения на CPU, память или даже [ эфемерное  дисковое пространство](https://render.com/docs/disks), что  не дает работать с файлами на диске.    ### Решение    А не поставить ли докер на какой-нить VPS? Вот бы только еще дописать утилитку по выкачиванию гита и автоматического  разворота докера, да еще и UI админку для этого. И естественно при решении любой проблемы нужно либо спросить старшего  товарища, либо делать прототип.    Поэтому я пошел в Интернет и нашел там [Dokku](https://dokku.com/). Но установка и результат, судя по описанию, выглядят  не лучше своей поделки, на первый взгляд. Я порыл дальше и  нашел [аналоги Dokku](https://alternativeto.net/software/dokku/). Среди них я нашел [Сoolify.io](https://coolify.io/),  который выглядит многообещающим, хоть и стартовая страничка несколько перенасыщена цветами, на мой взгляд.    И... я не прогадал!    ### Выбор VPS    Сначала покупаем VPS. Я выбрал [TimeWeb](https://timeweb.com/ru/), т.к. тут самые дешевые тарифы на тот момент были,  особенно по диску.    Я взял 1 CPU (правда в нем нет поддержки нейромодуля для программ на нейросети, но это другая история - расскажу ее  позже), 2 гига оперативки и 20 гигов диска. В принципе, чтобы поставить Coolify можно и меньше, но я оставил под будущие  проекты (потом расширил до 3 и 30 соответственно, т.к. 2+ проектам тесновато на 2 гигах).    Выбрал Debian 11, теперь подключаемся через SSH. Как это сделать можно посмотреть по аналогии с моей статьей про  [Настройку VPN](https://stswoon.blogspot.com/2023/07/vpn.html).    ### Установка    Далее нужно выполнить одну команду из документации Coolify... но это не работает ... точнее не совсем.    1. Debian пустой поэтому сначала ставим sudo     ```shell     apt install sudo -y     ```     (-y это чтобы он не спрашивал  вы точно хотите установить 12KB  - мы тут пару гигов потом закачаем...)  2. Ставим curl (он юзается в скрипте позже)     ```shell     sudo apt install curl -y     ```  3. Наконец ставим Coolify     ```shell     wget -q https://get.coollabs.io/coolify/install.sh -O install.sh; sudo bash ./install.sh     ```  4. На вопрос  установить ли докер  соглашаемся.    И вуаля - готово - открываем в браузере ваш IPшник на порту 3000. Первый раз вводим почту и пароль. Больше никто не  сможет зарегаться (если не разрешите). Теперь можно раскатывать проекты.    ### Раскатка из git-repository    Создаем Application. Указываем гит репозиторий, указываем ветку (обычно main). Выбираем тип Application, например  Docker.    ![](image1.png)    В этом окне указываем Port, на котором стартует приложение в докере (обычно, как нас учил Heroku, порт считывается из  переменной PORT либо 3000). Указываем Exposed Port. Это позволит нам на IPшнике от VPSки открыть приложение.    Дополнительно я купил домен без https (для экономии). Создал сабдомены и указал их в URL (FQDN). Далее ждем от 1 до 24  часов, чтобы новый DNS  разлетелся  по Интернету и можем заходить на сабдомен. Он, за счет встроенного в Collify  reverse-proxy, откроет на них приложения (а то я уж было стал ставить nginx, а он не стартует - думаю, что такое - порт  занят - а кто занял - Coolify)    На скриншоте выше как пример взят  репозиторий [https://github.com/stswoon/lingva-translate](https://github.com/stswoon/lingva-translate), который основа  на lingva.ml модели. К сожалению их сайт по какой-то причине умер уже длительное время назад, а я его использовал в  своих пет-проектах (типа угадай-песню - [song-riddle](https://stswoon-song-riddle.onrender.com/)) для перевода. Вот  теперь если кому-нибудь понадобиться, то можете использовать для перевода сайт https://lingva-ml-standby.stswoon.ru/.  Сорри за рекламу на сайте, но нужно хотя бы VPS отбить, а то семья не поймет.    ![](image2.png)"}]